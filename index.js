const express = require('express');
const app = express();

app.use(express.json());

const port = process.env.PORT || 3000;

const TelegramApi = require('node-telegram-bot-api');
const admin = require('firebase-admin');
require('firebase/database');
const serviceAccount = require('/etc/secrets/serviceAccountKey.json');
const token = process.env.token;
const bot = new TelegramApi(token);

const firebaseConfig = {
  apiKey: "AIzaSyBtHCM_DxBzOc-uAzzJbgvl9uWCbr2NlTA",
  authDomain: "test-shop-c86c0.firebaseapp.com",
  credential: admin.credential.cert(serviceAccount),
  databaseURL: "https://test-shop-c86c0-default-rtdb.firebaseio.com",
  projectId: "test-shop-c86c0",
  storageBucket: "test-shop-c86c0.appspot.com",
  messagingSenderId: "442194480617",
  appId: "1:442194480617:web:498da288a16a4d6d828f78"
};

admin.initializeApp(firebaseConfig);

// –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ Realtime Database
const database = admin.database();

const URL = 'https://xamuraucshop-test.onrender.com';

bot.setWebHook(`${URL}/bot${token}`);

app.post(`/bot${token}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è Telegram
});

const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID; // ID –≥—Ä—É–ø–ø—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º

let admins = {};
database.ref('admins').once('value').then((snapshot) => {
  admins = snapshot.val() || {};
  // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
  if (!Object.keys(admins).length) {
    admins[ADMIN_CHAT_ID.toString()] = true;
    database.ref('admins').set(admins);
  }
});

function isAdmin(chatId) {
  const id = chatId.toString();
  if (admins[id] === true) {
    return true;
  }
  return false;
}

function sendMessageToAllAdmins(message, inlineKeyboard = null) {
  Object.keys(admins).forEach(adminId => {
    const options = {};

    if (inlineKeyboard) {
      options.reply_markup = {
        inline_keyboard: inlineKeyboard
      };
    }

    bot.sendMessage(adminId, message, options)
  });
}

function forwardMessageToAllAdmins(chatId, messageId) {
  // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ admins - —ç—Ç–æ –º–∞—Å—Å–∏–≤ —Å ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
  Object.keys(admins).forEach(adminId => {
    bot.forwardMessage(adminId, chatId, messageId)
  });
}

database.ref('paymentDetails').once('value').then((snapshot) => {
  paymentDetails = snapshot.val() || "123456";
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
let products = [];

database.ref('products').once('value').then((snapshot) => {
  products = snapshot.val() || [  { label: '60', price: 88 },
    { label: '120', price: 176 },
    { label: '180', price: 264 },
    { label: '325', price: 445 },
    { label: '385', price: 520 },
    { label: '660', price: 870 },
    { label: '720', price: 910 },
    { label: '1800', price: 2150 },
    { label: '1920', price: 2300 },
    { label: '3850', price: 4100 },
    { label: '8100', price: 8200 },];
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–ª–∞–Ω—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let userBalances = {};

database.ref('userBalances').once('value').then((snapshot) => {
  userBalances = snapshot.val() || {};
});

// –î–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞
let awaitingDeposit = {};  // –û–∂–∏–¥–∞–Ω–∏–µ —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
let awaitingReceipt = {};  // –û–∂–∏–¥–∞–Ω–∏–µ —á–µ–∫–∞
let awaitingPubgId = {};   // –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ PUBG ID –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let pendingChecks = {};    // –•—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, —á—å–∏ —á–µ–∫–∏ –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
let awaitingToChangeProduct = {};
let awaitingToChangeCredentials = {};
let awaitingUserToChangeBalance = {};
let awaitingToChangeBalance = {};
let awaitingToCreateMailing = {};
let awaitingToAddAdmin = {};
let awaitingToRemoveAdmin = {};


bot.setMyCommands();

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
const mainMenu = {
  reply_markup: {
    keyboard: [
      [{ text: '–ö—É–ø–∏—Ç—å UC üí∞' }],
      [{ text: '–ë–∞–ª–∞–Ω—Å üí≥' }],
      [{ text: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ üîó' }],
    ],
    resize_keyboard: true,
    one_time_keyboard: false
  },
};

const adminMenu = {
  reply_markup: {
    keyboard: [
      [{ text: '–ö—É–ø–∏—Ç—å UC üí∞' }],
      [{ text: '–ë–∞–ª–∞–Ω—Å üí≥' }],
      [{ text: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ üîó' }],
      [{ text: '–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ‚öôÔ∏è' }],
    ],
    resize_keyboard: true,
    one_time_keyboard: false
  },
};

const adminActionsMenu = {
  reply_markup: {
    keyboard: [
      [{ text: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã üõ†Ô∏è' }, { text: '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ‚ûï' }, { text: '–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä ‚ûñ' }],
      [{ text: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã üí≥' }],
      [{ text: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å üí≥' }],
      [{ text: '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É ‚úâÔ∏è' }],
      [{ text: '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë§' }, { text: '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üóëÔ∏è' }],
      [{ text: '–ù–∞–∑–∞–¥ ‚Ü©Ô∏è' }]  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    ],
    resize_keyboard: true,
    one_time_keyboard: false
  }
};

const cancelMenu = {
  reply_markup: {
    keyboard: [
      [{ text: '–û—Ç–º–µ–Ω–∞' }],
    ],
    resize_keyboard: true,
    one_time_keyboard: true,
  },
};

bot.onText(/\/start(?: (.+))?/, (msg, match) => {
  const chatId = msg.chat.id;
  const referrerId = match[1];  // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  const menu = isAdmin(chatId) ? adminMenu : mainMenu;

  if (userBalances[chatId] || userBalances[chatId] === 0) {
    bot.sendMessage(chatId, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', menu)
  } else {
    if (referrerId && referrerId !== chatId.toString() && (userBalances[referrerId] || userBalances[referrerId] === 0)) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      database.ref(`referrals/${chatId}`).set({
        referrerId: referrerId
      });
      bot.sendMessage(referrerId, `–£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! ID: ${chatId}`);
    }
  
    if (!userBalances[chatId]) {
      userBalances[chatId] = 0; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
  
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      database.ref(`userBalances/${chatId}`).set(userBalances[chatId])
        .catch((error) => {
          console.error(`Error adding user to database: ${error}`);
        });
    }
  
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', menu);
  }
});

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏–º—è)
const getUserTag = (msg) => {
  const username = msg.from.username ? `@${msg.from.username}` : `${msg.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`;
  return username;
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const userTag = getUserTag(msg); // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  const replyToMessage = msg.reply_to_message;

  // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –æ—Ç –∞–¥–º–∏–Ω–∞ –∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  
  const menu = isAdmin(chatId) ? adminMenu : mainMenu;
  
  if (isAdmin(chatId) && replyToMessage) {
    const userId = replyToMessage.forward_from.id;

    // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.sendMessage(userId, `–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${msg.text}`).then(() => {
      sendMessageToAllAdmins(`–û—Ç–≤–µ—Ç –æ—Ç ${userTag} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID ${userId} –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.`)
    });
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã
  if (text === '–û—Ç–º–µ–Ω–∞') {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è
    awaitingPubgId[chatId] = false;
    awaitingDeposit[chatId] = false;
    awaitingReceipt[chatId] = false;
    awaitingDeposit[chatId] = false;
    awaitingReceipt[chatId] = false;
    awaitingPubgId[chatId] = false;
    pendingChecks[chatId] = false;
    awaitingToChangeProduct[chatId] = false;
    awaitingToChangeCredentials[chatId] = false;
    awaitingUserToChangeBalance[chatId] = false;
    awaitingToChangeBalance[chatId] = false;
    awaitingToCreateMailing[chatId] = false;
    awaitingToAddAdmin[chatId] = false;
    awaitingToRemoveAdmin[chatId] = false;
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    bot.sendMessage(chatId, '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', menu);
    return;
  }

  // –ï—Å–ª–∏ –±–æ—Ç –∂–¥–µ—Ç ID –≤ PUBG
  if (awaitingPubgId[chatId]) {
    const pubgId = text; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ PUBG
    const purchaseInfo = awaitingPubgId[chatId];
    const itemPrice = purchaseInfo.price;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (userBalances[chatId] >= itemPrice) {
      // –ï—Å–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, —Å–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
      userBalances[chatId] -= itemPrice;

      database.ref('userBalances').set(userBalances);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å ID PUBG –∏ —Ç–æ–≤–∞—Ä–æ–º
      sendMessageToAllAdmins(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userTag} (ID: ${chatId}) –≤–≤–µ–ª PUBG ID: ${pubgId} –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—É–º–º—É ${itemPrice}‚ÇΩ. –°—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å–∞–Ω—ã —Å –±–∞–ª–∞–Ω—Å–∞.`, [
        [{ text: '–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω', callback_data: `order_completed_${chatId}` }],
      ])

      bot.sendMessage(chatId, `–°–ø–∞—Å–∏–±–æ! –í–∞—à PUBG ID: ${pubgId} –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–Ω–æ ${itemPrice}‚ÇΩ. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞.`, menu);
    } else {
      // –ï—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å
      const missingAmount = itemPrice - userBalances[chatId];
      bot.sendMessage(chatId, `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞. –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${missingAmount}‚ÇΩ.`);
      bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫—É.', {
        reply_markup: {
          inline_keyboard: [
            [{ text: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data: 'deposit' }],
          ],
          keyboard: menu.reply_markup.keyboard,
        },
      });
    }

    awaitingPubgId[chatId] = false; // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ ID –≤ PUBG
    return;
  }

  // –ï—Å–ª–∏ –±–æ—Ç –∂–¥–µ—Ç —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
  if (awaitingDeposit[chatId]) {
    const amount = parseFloat(text); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ

    if (isNaN(amount) || amount <= 0) {
      bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.');
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    pendingChecks[chatId] = {
      amount: amount,
      userTag: userTag,
      userId: chatId
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
    bot.sendMessage(chatId, `–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:

${paymentDetails}

–°—É–º–º–∞: ${amount}

–í –û–¢–í–ï–¢–ù–û–ú –°–û–û–ë–©–ï–ù–ò–ò –ü–†–ò–®–õ–ò–¢–ï –ß–ï–ö –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:`, cancelMenu);

    awaitingDeposit[chatId] = false;  // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ —Å—É–º–º—ã
    awaitingReceipt[chatId] = true;  // –ù–∞—á–∏–Ω–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ —á–µ–∫–∞
    return;
  }

  if (awaitingReceipt[chatId]) {
    // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —á–µ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    forwardMessageToAllAdmins(chatId, msg.message_id)
    bot.sendMessage(chatId, '–ß–µ–∫ –ø–æ–ª—É—á–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.', menu);
    
    // –û–ø–æ–≤–µ—â–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ–∫–∞
    const userInfo = pendingChecks[chatId];
    sendMessageToAllAdmins(`${userTag} (ID: ${chatId}) –æ—Ç–ø—Ä–∞–≤–∏–ª —á–µ–∫ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —Å—É–º–º—É ${userInfo.amount}‚ÇΩ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ.`, [
      [{ text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data: `confirm_${chatId}` }],
      [{ text: '–û—Ç–º–µ–Ω–∏—Ç—å', callback_data: `reject_${chatId}` }],
    ])

    awaitingReceipt[chatId] = false;  // –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ —á–µ–∫–∞
    return;
  }

  if (awaitingToChangeProduct[chatId]) {
    const product = awaitingToChangeProduct[chatId].product;
    const newPrice = parseFloat(msg.text);
    if (isNaN(newPrice)) {
        bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É.');
        return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
    product.price = newPrice;
    database.ref('products').set(products)
    .then(() => {
        bot.sendMessage(chatId, `–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ ${product.name}) –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${newPrice}‚ÇΩ.`);
    })
    .catch((error) => {
        bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Firebase.');
        console.error(error);
    });
      awaitingToChangeProduct[chatId] = false
  }

  if (awaitingToChangeCredentials[chatId]) {
    paymentDetails = msg.text;
      database.ref('paymentDetails').set(paymentDetails)
        .then(() => {
          bot.sendMessage(chatId, `–†–µ–∫–≤–∏–∑–∏—Ç—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞: ${paymentDetails}`, menu);
        })
        .catch((error) => {
          bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ Firebase.', menu);
          console.error(error);
    });

    awaitingToChangeCredentials[chatId] = false;
  }

  if (awaitingUserToChangeBalance[chatId]) {
    const userId = msg.text; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    bot.sendMessage(chatId, `–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userBalances[userId]}. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É –¥–ª—è –±–∞–ª–∞–Ω—Å–∞:`);

    awaitingToChangeBalance[chatId] = {userId}
    awaitingUserToChangeBalance[chatId] = false
  }

  if (awaitingToChangeBalance[chatId]) {
    const newBalance = parseFloat(msg.text); // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é —Å—É–º–º—É
    const userId = awaitingToChangeBalance[chatId].userId

    if (isNaN(newBalance)) {
      bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.', menu);
      return;
    }

    if (userBalances[userId] || userBalances[userId] === 0) {
      userBalances[userId] = newBalance; // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      database.ref('userBalances').set(userBalances)
        .then(() => {
          bot.sendMessage(chatId, `–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${userId} –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${newBalance}‚ÇΩ.`, menu);
        })
        .catch((error) => {
          bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Firebase.', menu);
          console.error(error);
        });
    } else {
      bot.sendMessage(chatId, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º id –Ω–µ—Ç.', menu)
    }

    awaitingToChangeBalance[chatId] = false
  } 

  if (awaitingToCreateMailing[chatId]) {
    const broadcastMessage = msg.text;
    if (msg.text === '–û—Ç–º–µ–Ω–∞') {
      return;
    }
    if (!broadcastMessage) {
      return bot.sendMessage(chatId, '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.');
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database.ref('userBalances').once('value', async (snapshot) => {
      const users = snapshot.val();
      
      if (!users) {
        return bot.sendMessage(chatId, '–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.');
      }

      // –†–∞–∑–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      const userIds = Object.keys(users);
      for (const userId of userIds) {
        try {
          await bot.sendMessage(userId, broadcastMessage);
        } catch (error) {
          // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë
          if (error.response && error.response.statusCode === 429) {
            const retryAfter = error.response.body.parameters.retry_after || 1;
            console.log(`–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ ${retryAfter} —Å–µ–∫—É–Ω–¥...`);
            await new Promise(resolve => setTimeout(resolve, retryAfter * 1000));
          }
        }
    
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç Telegram
        await new Promise(resolve => setTimeout(resolve, 1000)); // –ó–∞–¥–µ—Ä–∂–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞
      }

      bot.sendMessage(chatId, `–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${userIds.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.`, menu);
    });

    awaitingToCreateMailing[chatId] = false;
  }

  if (awaitingToAddAdmin[chatId]) {
    const newAdminId = msg.text;
    if (!admins[newAdminId]) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫
      admins[newAdminId] = true;
      database.ref('admins').set(admins)
        .then(() => {
          bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${newAdminId} –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.`, menu);
          bot.sendMessage(newAdminId, '–í—ã –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        })
        .catch((error) => {
          bot.sendMessage(chatId, `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`);
        });
    } else {
      bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${newAdminId} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.`, menu);
    }

    awaitingToAddAdmin[chatId] = false;
  }

  if (awaitingToRemoveAdmin[chatId]) {
    const adminIdToRemove = msg.text;
          
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (admins[adminIdToRemove]) {
      if (adminIdToRemove === ADMIN_CHAT_ID) {
        bot.sendMessage(chatId, '–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', menu);
      } else {
        // –£–¥–∞–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
        delete admins[adminIdToRemove];
        database.ref('admins').set(admins)
            .then(() => {
                bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${adminIdToRemove} –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.`, menu);
                bot.sendMessage(adminIdToRemove, '–í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.');
            })
            .catch((error) => {
                bot.sendMessage(chatId, `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`);
            });
      }
    } else {
        bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${adminIdToRemove} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.`, menu);
    }

    awaitingToRemoveAdmin[chatId] = false;
  }

  // –û–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
  if (text === '–ë–∞–ª–∞–Ω—Å üí≥') {
    const balance = userBalances[chatId];
    bot.sendMessage(chatId, `–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance}‚ÇΩ`, {
      reply_markup: {
        inline_keyboard: [
          [{ text: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data: 'deposit' }],
        ],
      },
    });
  } else if (text === '–ö—É–ø–∏—Ç—å UC üí∞') {
    const keyboard = [];
    for (let i = 0; i < products.length; i += 2) {
      const row = products.slice(i, i + 2).map(item => ({
        text: `${item.label} UC - ${item.price}‚ÇΩ`,
        callback_data: `buy_${item.label}_${item.price}`,
      }));
      keyboard.push(row);
    }
    bot.sendMessage(chatId, 'üõí –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', {
      reply_markup: {
        inline_keyboard: keyboard,
      },
    });
  } else if (text === '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ üîó') {
    const referralLink = `https://t.me/XaMuRaSHOP_bot?start=${chatId}`;

    bot.sendMessage(chatId, `–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink}. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –∑–∞ –∏—Ö –ø–æ–∫—É–ø–∫–∏!`);
  } else if (text === '–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ‚öôÔ∏è') {
    if (!isAdmin(chatId)) {
      return; 
    }
    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', adminActionsMenu);
  } else if (text === '–ù–∞–∑–∞–¥ ‚Ü©Ô∏è') {
    if (!isAdmin(chatId)) {
      return; 
    }
    bot.sendMessage(chatId, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', adminMenu);
  } else if (text === '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã üõ†Ô∏è') {
    const chatId = msg.chat.id;
    if (!isAdmin(chatId)) {
      return; 
    }

    // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    const productButtons = products.map(product => ({
      text: `${product.label} UC - ${product.price}‚ÇΩ`,  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –º–µ—Ç–∫—É –∏ –∏–º—è —Ç–æ–≤–∞—Ä–∞
      callback_data: `edit_product_${product.label}`  // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π callback_data –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    }));

    // –†–∞–∑–±–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ
    const keyboard = [];
    for (let i = 0; i < productButtons.length; i += 2) {
      keyboard.push(productButtons.slice(i, i + 2));
    }

    bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:', {
      reply_markup: {
        inline_keyboard: keyboard
      }
    });

  } else if (text === '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã üí≥') {
    const chatId = msg.chat.id;
    if (!isAdmin(chatId)) {
      return; 
    }
  
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:', cancelMenu);

    awaitingToChangeCredentials[chatId] = true;
  } else if (text === '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å üí≥') {
    const chatId = msg.chat.id;
    if (!isAdmin(chatId)) {
      return; 
    }
  
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–µ–π –±–∞–ª–∞–Ω—Å –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:', cancelMenu);

    awaitingUserToChangeBalance[chatId] = true;
  }  else if (text === '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É ‚úâÔ∏è') {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if (!isAdmin(chatId)) {
      return; 
    }
  
    bot.sendMessage(chatId, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:', cancelMenu);
    
    awaitingToCreateMailing[chatId] = true;
  } else if (text === '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë§') {
    if (isAdmin(chatId)) {
      bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç—å Id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: ', cancelMenu)
      
      awaitingToAddAdmin[chatId] = true;
    }
  } else if (text === '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üóëÔ∏è') {
    if (isAdmin(chatId)) {
      bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å: ', cancelMenu);
      
      awaitingToRemoveAdmin[chatId] = true;
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const data = query.data;

  if (userBalances[chatId] === undefined) {
    userBalances[chatId] = 0;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  if (data.startsWith('confirm_')) {
    const userId = data.split('_')[1];
    const userInfo = pendingChecks[userId];

    if (!isAdmin(query.from.id)) {
      return
    }

    if (userInfo) {
      const depositAmount = userInfo.amount;

      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      userBalances[userId] = (userBalances[userId] || 0) + depositAmount;

      database.ref('userBalances').set(userBalances);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
      database.ref(`referrals/${userId}`).once('value', (snapshot) => {
        if (snapshot.exists()) {
          const referralData = snapshot.val();
          const referrerId = referralData[Object.keys(referralData)[0]];  // –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
          const bonus = depositAmount * 0.005;  // 0.5% –±–æ–Ω—É—Å

          // –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–µ—Ä—É
          userBalances[referrerId] = (userBalances[referrerId] || 0) + bonus;
          database.ref('userBalances').set(userBalances);

          // –°–æ–æ–±—â–∞–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä—É –æ –±–æ–Ω—É—Å–µ
          bot.sendMessage(referrerId, `–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ ${depositAmount}‚ÇΩ. –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ ${bonus}‚ÇΩ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –±–æ–Ω—É—Å–∞.`);
        }
      });

      // –û–ø–æ–≤–µ—â–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      sendMessageToAllAdmins(`–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ ${depositAmount}‚ÇΩ –¥–ª—è ${userInfo.userTag} (ID: ${userId}) –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ.`);
      bot.sendMessage(userId, `–í–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${depositAmount}‚ÇΩ. –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${userBalances[userId]}‚ÇΩ.`);

      // –û—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
      delete pendingChecks[userId];
    }
  } else if (data.startsWith('reject_')) {
    const userId = data.split('_')[1];
    const userInfo = pendingChecks[userId];

    if (!isAdmin(query.from.id)) {
      return
    }

    if (userInfo) {
      // –û–ø–æ–≤–µ—â–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ—Ç–º–µ–Ω–µ
      sendMessageToAllAdmins(`–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ ${userInfo.amount}‚ÇΩ –¥–ª—è ${userInfo.userTag} (ID: ${userId}) –æ—Ç–º–µ–Ω–µ–Ω–æ.`);
      bot.sendMessage(userId, `–í–∞—à–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å—É–º–º—É ${userInfo.amount}‚ÇΩ –±—ã–ª–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`);

      // –û—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
      delete pendingChecks[userId];
    }
  } else if (data.startsWith('buy_')) {
    const [_, label, price] = data.split('_');; // –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∫—É —Ç–æ–≤–∞—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 60)
    const numericPrice = Number(price);
    
    // –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ ID –≤ PUBG
    bot.sendMessage(chatId, `–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä: ${label}UC –∑–∞ ${numericPrice}‚ÇΩ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à ID –≤ PUBG:`, cancelMenu);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ –∏ –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥–∞ PUBG ID
    awaitingPubgId[chatId] = { label, price: numericPrice }; // –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏ —Ü–µ–Ω—ã
    awaitingDeposit[chatId] = false; // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–∂–∏–¥–∞–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω—ã–º
  } else if (data.startsWith('order_completed_')) {
    const userId = data.split('_')[2]; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏–∑ callback_data
    const message = query.message;

    if (!isAdmin(query.from.id)) {
      return
    }

    // –°–æ–æ–±—â–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
    sendMessageToAllAdmins(`–ó–∞–∫–∞–∑ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${userId} –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω.`);

    // –°–æ–æ–±—â–∞–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—é, —á—Ç–æ –µ–≥–æ –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω
    bot.sendMessage(userId, '–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –≤ –≥—Ä—É–ø–ø–µ –∏ –ø–æ–º–æ–≥–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã. https://t.me/+Q6biAiRMhNszZGUy');

    bot.editMessageReplyMarkup({ inline_keyboard: [] }, {
      chat_id: message.chat.id,
      message_id: message.message_id,
    });

    return;
  } else if (data.startsWith('edit_product_')) {
      const label = data.replace('edit_product_', '');

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞
      const product = products.find(p => p.label === label);
      if (!product) {
          bot.sendMessage(chatId, `–¢–æ–≤–∞—Ä —Å –º–µ—Ç–∫–æ–π ${label} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
          return;
      }

      bot.sendMessage(chatId, `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${label} UC:`, cancelMenu);

      awaitingToChangeProduct[chatId] = {product}
  } else if (data === 'deposit') {
    // –ë–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:', cancelMenu);
    awaitingDeposit[chatId] = true;  // –û–∂–∏–¥–∞–Ω–∏–µ —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});